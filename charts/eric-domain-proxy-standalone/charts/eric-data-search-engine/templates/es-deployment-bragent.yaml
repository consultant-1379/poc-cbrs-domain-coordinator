{{- if .Values.brAgent.enabled -}}
{{- $g := fromJson (include "eric-data-search-engine.global" .) -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "eric-data-search-engine.fullname" . }}-bragent
  {{- include "eric-data-search-engine.helm-labels" . | indent 2 }}
  annotations:
  {{- include "eric-data-search-engine.annotations" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "eric-data-search-engine.agentname" . }}
      app.kubernetes.io/instance: {{.Release.Name | quote }}
  serviceName: {{ include "eric-data-search-engine.fullname" . }}-bragent
  replicas: 1
  updateStrategy:
    type: {{ .Values.updateStrategy.bragent.type | quote }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "eric-data-search-engine.agentname" . }}
        app.kubernetes.io/version: {{ template "eric-data-search-engine.version" . }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        adpbrlabelkey: {{ include "eric-data-search-engine.fullname" . | quote }}
      annotations:
        {{- include "eric-data-search-engine.annotations" . | indent 8 }}
        checksum/config: {{ include (print $.Template.BasePath "/es-configmap-bragent.yaml") . | sha256sum }}
        {{- if .Values.brAgent.backupTypeList }}
        backupType: {{ join ";" .Values.brAgent.backupTypeList }}
        {{- end }}
    spec:
      serviceAccount: ""
      serviceAccountName: {{ include "eric-data-search-engine.fullname" . }}-sa
      securityContext:
        fsGroup: {{ include "eric-data-search-engine.fsGroup.coordinated" . }}
        supplementalGroups:
          - 143743
{{- include "eric-data-search-engine.pullSecrets" . | indent 6 }}
      containers:
      - name: "bragent"
        imagePullPolicy: {{ .Values.imageCredentials.registry.imagePullPolicy | default $g.registry.imagePullPolicy | quote }}
        {{- if .Values.imageCredentials.registry.url }}
        image: "{{ .Values.imageCredentials.registry.url }}/{{ .Values.imageCredentials.repoPath }}/{{ .Values.images.bragent.name }}:{{ .Values.images.bragent.tag }}"
        {{- else }}
        image: "{{ $g.registry.url }}/{{ .Values.imageCredentials.repoPath }}/{{ .Values.images.bragent.name }}:{{ .Values.images.bragent.tag }}"
        {{- end }}
        command:
          - /opt/redirect/stdout-redirect
          - -redirect
          - {{ include "eric-data-search-engine.log-redirect" . }}
          - -run
          - bragent.sh
          {{- if has "stream" .Values.log.outputs }}
          - -logfile
          - {{ .Values.logshipper.storagePath }}/bragent.log
          - -size
          - "5"
          {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          capabilities:
            drop:
              - "all"
        resources:
          requests:
            memory: {{ .Values.resources.bragent.requests.memory | quote }}
            cpu: {{ .Values.resources.bragent.requests.cpu | quote }}
          limits:
            memory: {{ .Values.resources.bragent.limits.memory | quote }}
            cpu: {{ .Values.resources.bragent.limits.cpu | quote }}
        env:
          - name: LOG_LEVEL
            value: {{ .Values.logLevel }}
          - name: REPOTYPE
            value: {{ .Values.brAgent.backupRepository.type }}
          - name: TZ
            value: {{ $g.timezone | quote }}
        readinessProbe:
          exec:
            command:
              - "pgrep"
              - "-fl"
              - "java"
          initialDelaySeconds: {{ .Values.readinessProbe.bragent.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.bragent.timeoutSeconds }}
        livenessProbe:
          exec:
            command:
              - "pgrep"
              - "-fl"
              - "java"
          initialDelaySeconds: {{ .Values.livenessProbe.bragent.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.bragent.timeoutSeconds }}
        volumeMounts:
        {{- if  eq .Values.brAgent.backupRepository.type "s3" }}
        - name: s3secrets
          mountPath: "/run/secrets/s3"
          readOnly: true
        {{- end }}
        - name: {{ include "eric-data-search-engine.fullname" . }}-bragentproperties
          mountPath: /opt/bragent/bin/application.properties
          subPath: application.properties
        {{- if eq .Values.brAgent.backupRepository.type "fs" }}
        - name: repository
          mountPath: /opt/bragent/data
        {{- end }}
        {{- if $g.security.tls.enabled }}
        - name: {{ template "eric-data-search-engine.fullname" . }}-bragent-siptls-ca
          mountPath: "/run/secrets/certificates/ca-bro/"
          readOnly: true
        - name: "http-client-cert-bra"
          mountPath: "/run/secrets/http-client-certificates-bra"
          readOnly: true
        - name: "sip-tls-trusted-root-cert"
          mountPath: "/run/secrets/sip-tls-trusted-root-cert"
          readOnly: true
        - name: "bro-client-cert-bra"
          mountPath:  "/run/secrets/bro-client-certificates-bra"
          readOnly: true
        {{- end }}
        {{- if .Values.brAgent.backupDataModelConfigMap }}
        - name: "custom-backup-config"
          mountPath: "/opt/bragent/bin/backupconfig.yaml"
          subPath: "backupconfig.yaml"
          readOnly: true
        {{- end }}
        {{- if has "stream" .Values.log.outputs }}
          {{- include "eric-data-search-engine.logshipper-storage-path" . | indent 8 }}
        {{- end }}
      {{- if has "stream" .Values.log.outputs }}
        {{- include "eric-data-search-engine.logshipper-container" . | indent 6 }}
      {{- end }}
    {{- if (or .Values.nodeSelector.bragent $g.nodeSelector) }}
      nodeSelector: {{- include "eric-data-search-engine.nodeSelector" (dict "context" "bragent" "root" .) | nindent 8 }}
    {{- end }}
      volumes:
      {{- if $g.security.tls.enabled }}
      - name: {{ template "eric-data-search-engine.fullname" . }}-bragent-siptls-ca
        secret:
          secretName: "eric-sec-sip-tls-trusted-root-cert"
      - name: "http-client-cert-bra"
        secret:
          secretName: {{ include "eric-data-search-engine.fullname" . }}-http-client-cert-bra
      - name: "sip-tls-trusted-root-cert"
        secret:
          secretName: "eric-sec-sip-tls-trusted-root-cert"
      - name: "bro-client-cert-bra"
        secret:
          secretName: "{{ include "eric-data-search-engine.fullname" . }}-bro-client-cert-bra"
      {{- end }}
      {{- if eq .Values.brAgent.backupRepository.type "s3" }}
      - name: s3secrets
        secret:
          secretName: {{ required "brAgent.backupRepository.s3.secretName is required when brAgent.backupRepository.type=s3" .Values.brAgent.backupRepository.s3.secretName | quote }}
          items:
          - key: {{ required "brAgent.backupRepository.s3.userKey is required when brAgent.backupRepository.type=s3" .Values.brAgent.backupRepository.s3.userKey | quote }}
            path: s3username.txt
          - key: {{ required "brAgent.backupRepository.s3.passKey is required when brAgent.backupRepository.type=s3" .Values.brAgent.backupRepository.s3.passKey | quote }}
            path: s3password.txt
      {{- end }}
      {{- if eq .Values.brAgent.backupRepository.type "fs" }}
      - name: repository
        persistentVolumeClaim:
          claimName: {{ include "eric-data-search-engine.fullname" . }}-repository
      {{- end }}
      - name: {{ include "eric-data-search-engine.fullname" . }}-bragentproperties
        configMap:
          defaultMode: 0444
          name: {{ include "eric-data-search-engine.fullname" . }}-bragentproperties
      {{- if .Values.brAgent.backupDataModelConfigMap }}
      - name: "custom-backup-config"
        configMap:
          defaultMode: 0444
          name: {{ .Values.brAgent.backupDataModelConfigMap | quote }}
      {{- end }}
      {{- if has "stream" .Values.log.outputs }}
        {{- include "eric-data-search-engine.logshipper-volume" . | indent 6 }}
      {{- end }}
{{ end }}
