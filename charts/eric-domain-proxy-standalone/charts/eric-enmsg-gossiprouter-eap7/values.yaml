## eric-enmsg-gossiprouter-eap7 image version

global:
  registry:
    url: armdocker.rnd.ericsson.se
    pullSecret:
  replicas-eric-enmsg-gossiprouter-eap7: 1
  ingress:
    enmHost:
  timezone:

productInfo:
  # R-State of the product. R State should match helm chart version (3.1.0 -> R2A)
  # To automate it when packaging the helm chart rstate can be generated
  # and below value replaced with correct R-State
  rstate: R11A

# Number of replicas(pods) to deploy
replicas-eric-enmsg-gossiprouter-eap7: 1

images:
  eric-enmsg-gossiprouter-eap7:
    name: eric-enmsg-gossiprouter-eap7
    tag: 1.10.0-8
    command: "[ '/entrypoint.sh', '-bind_addr $(POD_IP) -port $(PORT)' ]"
  waitInitContainer:
    enabled: false
    name: eric-enm-init-container
    tag: 1.10.0-8
    command: "[ '/bin/sh', '-c', 'bash /var/tmp/check_service.sh -s WAITSERVICE' ]"
  enmInitContainer:
    enabled: false

imageCredentials:
  repoPath: proj-enm
  pullPolicy: Always
  registry:
    url:
    pullSecret:

## Allows the specification of additional environment variables
extraEnv:
- name: POD_IP
  valueFrom:
    fieldRef:
      fieldPath: status.podIP
- name: PORT
  value: "12003"
- name: GOSSIP_ROUTER_USAGE
  value: "eap7"

## Configure the service
## ref: http://kubernetes.io/docs/user-guide/services/
service:
  name: gossiprouter-eap7
  sgname: gossiprouter
  annotations: {}
  labels: {}

ingress_jboss_web_context:
  enabled: false
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"

# Service Ports to Expose, read from appconfig/servicePorts.txt
servicePorts:
  enabled: true

# Add container ports to open, read in from appconfig/ports.txt(disabled by default as should be included in docker file)
extraPorts:
  enabled: true

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources:
  requests:
    enabled: true
    memory: 4096Mi
  limits:
    enabled: true
    memory: 4096Mi

privileged:
  enabled: false

# Add initContainer if required
extraInitContainers:

## Additional containers to be added to the pod(s).
sidecarContainers:
  enabled: false

# Add in volumes(rwx etc), read from appconfig/volumes.txt
extraVolumes:
  enabled: true

# Add in volumeMounts(rwx etc), read from appconfig/volumeMounts.txt
extraVolumeMounts:
  enabled: true

# Custom config map, read from appconfig/configMaps.yaml
configMaps:
  enabled: false
  name: config-eric-enmsg-gossiprouter-eap7
  mountPath: MOUNTPOINT

  ## Persist data to a persistent volume
  ## database data Persistent Volume Storage Class
persistentVolumeClaim:
  enabled: false
  storageClass: "gp2"
  accessMode: ACCESSMODE
  size: SIZE
  mountPath: MOUNTPATH
  annotations: {}

# LivenessProbe Health Check configuration.
livenessProbe:
  enabled: false
  command: /opt/ericsson/vmmonitord/bin/ocf_monitor.py
  arguments: --exec_agents
  initialDelaySeconds: 600
  timeoutSeconds: 15
  periodSeconds: 30
  failureThreshold: 1

readinessProbe:
  enabled: false
  command: /opt/ericsson/vmmonitord/bin/ocf_monitor.py
  arguments: --exec_agents
  initialDelaySeconds: 120
  periodSeconds: 30
  timeoutSeconds: 15
  failureThreshold: 1

# Extra Annotations to be added to pod
podAnnotations: {}

## Tolerations for pod assignment
### ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

## Affinity for pod assignment
### ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# Constrain which nodes your pod is eligible to be scheduled on
### ref:  https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity-beta-feature
nodeAffinity: {}

### ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#pod-priority
priorityClassName: ""

## Node selector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

#https://kubernetes.io/docs/reference/federation/extensions/v1beta1/definitions/#_v1beta1_deploymentstrategy
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 0
